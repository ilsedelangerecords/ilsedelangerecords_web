name: 🚀 Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment to production'
        required: false
        default: false
        type: boolean

concurrency:
  group: production-deployment
  cancel-in-progress: false

jobs:
  # Build and deploy to production
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name:  Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Generate optimized static site
        run: |
          echo "🏗️ Building optimized static site for production..."
          pnpm run build:static
          
          # Add production optimizations
          cat > dist/.htaccess << 'EOF'
          # Production optimizations
          <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css
              AddOutputFilterByType DEFLATE application/xml application/xhtml+xml application/rss+xml
              AddOutputFilterByType DEFLATE application/javascript application/x-javascript application/json
          </IfModule>
          
          <IfModule mod_expires.c>
              ExpiresActive On
              ExpiresByType text/css "access plus 1 year"
              ExpiresByType application/javascript "access plus 1 year"
              ExpiresByType image/png "access plus 1 year"
              ExpiresByType image/jpg "access plus 1 year"
              ExpiresByType image/jpeg "access plus 1 year"
              ExpiresByType image/gif "access plus 1 year"
              ExpiresByType image/svg+xml "access plus 1 year"
              ExpiresByType application/json "access plus 1 week"
              ExpiresByType text/html "access plus 1 day"
          </IfModule>
          
          <IfModule mod_headers.c>
              Header always set X-Content-Type-Options nosniff
              Header always set X-Frame-Options DENY
              Header always set X-XSS-Protection "1; mode=block"
              Header always set Referrer-Policy "strict-origin-when-cross-origin"
              Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
          </IfModule>
          
          RewriteEngine On
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteRule ^([^\.]+)$ $1.html [NC,L]
          EOF

      - name: 📊 Production build summary
        run: |
          echo "� Production build completed!"
          echo "� Total size: $(du -sh dist/ | cut -f1)"
          echo "📄 Total files: $(find dist/ -type f | wc -l)"

      - name: 🚀 Deploy to production
        run: |
          echo "� Production deployment would go here"
          echo "📋 This workflow is ready for production secrets configuration"
          
          # Uncomment and configure when production server is ready:
          # mkdir -p ~/.ssh
          # echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/id_ed25519
          # chmod 600 ~/.ssh/id_ed25519
          # ssh-keyscan -p ${{ secrets.PRODUCTION_SSH_PORT || '22' }} ${{ secrets.PRODUCTION_SSH_HOST }} >> ~/.ssh/known_hosts
          # 
          # rsync -avz --delete --progress \
          #   -e "ssh -i ~/.ssh/id_ed25519 -p ${{ secrets.PRODUCTION_SSH_PORT || '22' }}" \
          #   dist/ \
          #   ${{ secrets.PRODUCTION_SSH_USER }}@${{ secrets.PRODUCTION_SSH_HOST }}:${{ secrets.PRODUCTION_SSH_PATH }}
